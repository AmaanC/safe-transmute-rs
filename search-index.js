var searchIndex = {};
searchIndex["safe_transmute"] = {"doc":"This crate contains checked implementations of `transmute()`.","items":[[3,"Error","safe_transmute","A transmutation error.",null,null],[12,"required","","The required amount of bytes for transmutation.",0,null],[12,"actual","","The actual amount of bytes.",0,null],[12,"reason","","Why this `required`/`actual`/`T` combo is an error.",0,null],[4,"ErrorReason","","How the type's size compares to the received byte count and the transmutation function's characteristic.",null,null],[13,"NotEnoughBytes","","Too few bytes to fill even one instance of a type.",1,null],[13,"TooManyBytes","","Too many bytes to fill a type.",1,null],[13,"InexactByteCount","","The byte amount received is not the same as the type's size.",1,null],[13,"InvalidValue","","The byte count is fine, but the data contains an invalid value for the target type.",1,null],[5,"guarded_transmute_pod_many_permissive","","View a byte slice as a slice of a POD type.",null,null],[5,"guarded_transmute_pod_vec_permissive","","Trasform a byte vector into a vector of POD.",null,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[5,"guarded_transmute_pod_many_pedantic","","View a byte slice as a slice of POD.",null,null],[5,"guarded_transmute_pod_pedantic","","Transmute a byte slice into a single instance of a POD.",null,null],[5,"guarded_transmute_pod_vec_pedantic","","Trasform a byte vector into a vector of POD.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"guarded_transmute_pod_many","","Transmute a byte slice into a single instance of a POD.",null,null],[5,"guarded_transmute_pod","","Transmute a byte slice into a single instance of a POD.",null,null],[5,"guarded_transmute_pod_vec","","Trasform a byte vector into a vector of POD.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"guarded_transmute_bool_vec_permissive","","Trasform a byte vector into a vector of bool.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"guarded_transmute_bool_vec_pedantic","","Trasform a byte vector into a vector of bool.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"guarded_transmute_bool_permissive","","View a byte slice as a slice of boolean values.",null,null],[5,"guarded_transmute_bool_pedantic","","View a byte slice as a slice of boolean values.",null,null],[5,"guarded_transmute","","Transmute a byte slice into a single instance of a `Copy`able type.",null,null],[5,"guarded_transmute_pedantic","","Transmute a byte slice into a single instance of a `Copy`able type.",null,null],[5,"guarded_transmute_many","","View a byte slice as a slice of an arbitrary type.",null,null],[5,"guarded_transmute_many_permissive","","View a byte slice as a slice of an arbitrary type.",null,null],[5,"guarded_transmute_many_pedantic","","View a byte slice as a slice of an arbitrary type.",null,null],[5,"guarded_transmute_vec","","Trasform a byte vector into a vector of an arbitrary type.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"guarded_transmute_vec_permissive","","Trasform a byte vector into a vector of an arbitrary type.",null,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[5,"guarded_transmute_vec_pedantic","","Trasform a byte vector into a vector of an arbitrary type.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"errorreason"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"errorreason"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"util","","Module containing various utility functions.",null,null],[5,"designalise_f32","safe_transmute::util","If the specified 32-bit float is a signaling NaN, make it a quiet NaN.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"designalise_f64","","If the specified 64-bit float is a signaling NaN, make it a quiet NaN.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[8,"PodTransmutable","safe_transmute","Type that can be non-`unsafe`ly transmuted into",null,null]],"paths":[[3,"Error"],[4,"ErrorReason"]]};
initSearch(searchIndex);
